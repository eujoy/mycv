{"version":3,"sources":["components/profile/articles.js","components/profile/education.js","components/profile/experience.js","components/profile/open_source.js","components/profile/personalinfo.js","components/profile/skills.js","components/profile.js","App.js","serviceWorker.js","index.js"],"names":["Articles","props","state","denseLinst","articlesList","length","classes","this","Grid","container","justify","alignItems","spacing","item","xs","sm","Card","className","card","variant","CardContent","Typography","component","List","dense","map","article","ListItem","button","target","href","link","listItemElement","ListItemIcon","fontSize","ListItemText","primary","title","secondary","subtitle","React","Component","withStyles","theme","root","flexGrow","bullet","display","margin","transform","minWidth","width","cardMain","textAlign","typography","pxToRem","cardRightMain","color","palette","warning","dark","cardSecondary","cardRightSecondary","cardLastText","text","listItemContent","marginTop","marginBottom","Education","bull","Experience","handleChange","panel","event","isExpanded","setState","expanded","experienceData","exp","idx","active","panelIdx","ExpansionPanel","ExpansionPanelSummary","expansionPanelHeader","expandIcon","aria-controls","id","positionHeading","position","companyHeading","company","secondaryHeading","startDate","endDate","location","ExpansionPanelDetails","highlights","content","listItemContentPrimary","listItemContentSecondary","toolsUsed","sort","a","b","tool","Chip","label","align","dividerClass","maxHeight","fontWeight","flexBasis","flexShrink","info","backgroundColor","borderBottom","minHeight","marginLeft","OpenSource","openSourceList","opSrc","PersonalInfo","personalInfoData","personalInfo","cnt","Divider","Skills","skillsData","skill","Profile","Paper","elevation","fullnameHeading","personalQuotesData","Tooltip","placement","Link","padding","paper","fontStyle","useStyles","makeStyles","background","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ce6061a7.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport DescriptionIcon from '@material-ui/icons/Description';\n\nimport articlesList from '../data/articles.json';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    card: {\n        minWidth: 275,\n        width: \"100%\",\n    },\n    cardMain: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(15),\n    },\n    cardRightMain: {\n        textAlign: \"right\",\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.warning.dark,\n    },\n    cardSecondary: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(15),\n    },\n    cardRightSecondary: {\n        textAlign: \"right\",\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.warning.dark,\n    },\n    cardLastText: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(14),\n        color: theme.palette.text.secondary,\n    },\n    listItemContent: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(14),\n    },\n    listItemElement: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n    },\n});\n\nclass Articles extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            denseLinst: true,\n        }\n    }\n\n    render() {\n        if (articlesList.length === 0) {\n            return <div></div>;\n        }\n\n        const { classes } = this.props;\n\n        return(\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                <Grid item xs={12} sm={12}>\n                    <Card className={classes.card} variant=\"outlined\">\n                        <CardContent>\n                            <Typography variant=\"h5\" component=\"h5\">\n                                Articles\n                            </Typography>\n                            \n                            <Grid container spacing={0}>\n                                <Grid item xs={12} sm={12}>\n                                    <List dense={this.state.denseLinst}>\n                                        {articlesList.map((article) => {\n                                            return (\n                                                <ListItem\n                                                    button\n                                                    component=\"a\"\n                                                    target=\"_blank\"\n                                                    href={article.link}\n                                                    className={classes.listItemElement}\n                                                >\n                                                    <ListItemIcon>\n                                                        <DescriptionIcon fontSize=\"large\" />\n                                                    </ListItemIcon>\n                                                    <ListItemText\n                                                        className={classes.listItemElement}\n                                                        primary={article.title}\n                                                        secondary={article.subtitle !== \"\" ? article.subtitle : null}\n                                                    />\n                                                </ListItem>\n                                            );\n                                        })}\n                                    </List>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nArticles.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Articles);\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    card: {\n        minWidth: 275,\n        width: \"100%\",\n    },\n    cardMain: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(15),\n    },\n    cardRightMain: {\n        textAlign: \"right\",\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.warning.dark,\n    },\n    cardSecondary: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(15),\n    },\n    cardRightSecondary: {\n        textAlign: \"right\",\n        fontSize: theme.typography.pxToRem(13),\n        color: theme.palette.warning.dark,\n    },\n    cardLastText: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(14),\n        color: theme.palette.text.secondary,\n    },\n});\n\nclass Education extends React.Component {\n    render() {\n        const { classes } = this.props;\n        const bull = <span className={classes.bullet}>•</span>;\n\n        return(\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                <Grid item xs={12} sm={12}>\n                    <Card className={classes.card} variant=\"outlined\">\n                        <CardContent>\n                            <Typography variant=\"h5\" component=\"h5\">\n                                Education\n                            </Typography>\n                            \n                            <Grid container spacing={0}>\n                                <Grid item xs={7} sm={7}>\n                                    <Typography className={classes.cardMain}>\n                                        Athens University of Economics and Business (AUEB)\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={5} sm={5}>\n                                    <Typography className={classes.cardRightMain}>\n                                        Athens, Greece\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n\n                            <Grid container spacing={0}>\n                                <Grid item xs={7} sm={7}>\n                                    <Typography className={classes.cardSecondary}>\n                                        B.S. in Computer Science\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={5} sm={5}>\n                                    <Typography className={classes.cardRightSecondary}>\n                                        Oct. 2008 - Sept. 2013\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n\n                            <Grid container spacing={0}>\n                                <Grid item xs={12} sm={12}>\n                                    <Typography className={classes.cardLastText}>\n                                        Specialization courses on :<br/>\n                                        {bull} Information Systems and Security<br/>\n                                        {bull} Database Systems and Knowledge Management\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nEducation.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Education);\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport experienceData from '../data/experience.json';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        width: \"100%\",\n        align: \"center\",\n    },\n    dividerClass: {\n        margin: '2px',\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    container: {\n        maxHeight: 440,\n    },\n    card: {\n        minWidth: 275,\n        width: \"100%\",\n    },\n    cardMain: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(13),\n        fontWeight: \"bold\",\n    },\n    cardRightMain: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(13),\n    },\n    positionHeading: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '80.20%',\n        flexShrink: 0,\n    },\n    companyHeading: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(13),\n        color: theme.palette.info.dark\n    },\n    secondaryHeading: {\n        textAlign: \"right\",\n        fontSize: theme.typography.pxToRem(12),\n        color: theme.palette.warning.dark,\n    },\n    expansionPanelHeader: {\n        backgroundColor: 'rgba(0, 0, 0, .01)',\n        borderBottom: '2px solid rgba(0, 0, 0, .125)',\n        marginBottom: 0,\n        minHeight: 70,\n        '&$expanded': {\n            minHeight: 56,\n        },\n    },\n    listItemContentPrimary: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(13),\n    },\n    listItemContentSecondary: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(11),\n        marginLeft: 30,\n        color: \"#616161\"\n    },\n    listItemElement: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n    },\n});\n\nclass Experience extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            expanded: false,\n            denseLinst: true,\n        }\n    }\n\n    handleChange = (panel) => (event, isExpanded) => {\n        this.setState({\n            expanded: isExpanded ? panel : false\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const bull = <span className={classes.bullet}>•</span>;\n\n        return (\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n            <Grid item xs={11}>\n                <Card className={classes.card} variant=\"outlined\">\n                    <CardContent>\n                        <Typography variant=\"h5\" component=\"h5\">\n                            Experience\n                        </Typography>\n                            {experienceData.map((exp, idx) => {\n                                if (exp.active === false) {\n                                    return (\"\");\n                                }\n\n                                var panelIdx = \"panel\" + idx + 1\n\n                                return (\n                                    <ExpansionPanel>\n                                        <ExpansionPanelSummary\n                                            className={classes.expansionPanelHeader}\n                                            expandIcon={<ExpandMoreIcon />}\n                                            aria-controls={panelIdx + \"bh-content\"}\n                                            id={panelIdx + \"bh-header\"}\n                                        >\n                                            <Typography className={classes.positionHeading}>\n                                                {exp.position}<br />\n                                                <Typography className={classes.companyHeading}>{exp.company}</Typography>\n                                            </Typography>\n                                            <Typography className={classes.secondaryHeading}>\n                                                {exp.startDate} - {exp.endDate}<br />\n                                                {exp.location}\n                                            </Typography>\n                                        </ExpansionPanelSummary>\n                                        <ExpansionPanelDetails>\n                                            <div>\n                                                <List dense={this.state.denseLinst}>\n                                                    {exp.highlights.map((content) => {\n                                                        var primary = <Typography className={classes.listItemContentPrimary}>{bull} {content.primary}</Typography>\n                                                        var secondary = content.secondary !== \"\" ? <Typography className={classes.listItemContentSecondary}>{bull} {content.secondary}</Typography> : null\n\n                                                        return (\n                                                            <ListItem className={classes.listItemElement}>\n                                                                <ListItemText\n                                                                    className={classes.listItemElement}\n                                                                    primary={primary}\n                                                                    secondary={secondary}\n                                                                />\n                                                            </ListItem>\n                                                        );\n                                                    })}\n                                                </List>\n                                                                                                \n                                                {exp.toolsUsed.sort((a, b) => a > b ? 1 : -1).map((tool) => {\n                                                    return (<Chip label={tool} variant=\"outlined\" color=\"primary\" />);\n                                                })}\n                                            </div>\n                                        </ExpansionPanelDetails>\n                                    </ExpansionPanel>\n                                );\n                            })}\n                            </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nExperience.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Experience);\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport GithubIcon from '@material-ui/icons/GitHub';\n\nimport openSourceList from '../data/open_source.json';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    card: {\n        minWidth: 275,\n        width: \"100%\",\n    },\n    cardMain: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(15),\n    },\n    cardRightMain: {\n        textAlign: \"right\",\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.warning.dark,\n    },\n    cardSecondary: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(15),\n    },\n    cardRightSecondary: {\n        textAlign: \"right\",\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.warning.dark,\n    },\n    cardLastText: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(14),\n        color: theme.palette.text.secondary,\n    },\n    listItemContent: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(14),\n    },\n    listItemElement: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n    },\n});\n\nclass OpenSource extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            denseLinst: true,\n        }\n    }\n\n    render() {\n        if (openSourceList.length === 0) {\n            return <div></div>;\n        }\n\n        const { classes } = this.props;\n\n        return(\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                <Grid item xs={12} sm={12}>\n                    <Card className={classes.card} variant=\"outlined\">\n                        <CardContent>\n                            <Typography variant=\"h5\" component=\"h5\">\n                                Open Source\n                            </Typography>\n                            \n                            <Grid container spacing={0}>\n                                <Grid item xs={12} sm={12}>\n                                    <List dense={this.state.denseLinst}>\n                                        {openSourceList.map((opSrc) => {\n                                            return (\n                                                <ListItem\n                                                    button\n                                                    component=\"a\"\n                                                    target=\"_blank\"\n                                                    href={opSrc.link}\n                                                    className={classes.listItemElement}\n                                                >\n                                                    <ListItemIcon>\n                                                        <GithubIcon fontSize=\"large\" />\n                                                    </ListItemIcon>\n                                                    <ListItemText\n                                                        className={classes.listItemElement}\n                                                        primary={opSrc.title}\n                                                        secondary={opSrc.subtitle !== \"\" ? opSrc.subtitle : null}\n                                                    />\n                                                </ListItem>\n                                            );\n                                        })}\n                                    </List>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nOpenSource.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(OpenSource);\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport personalInfoData from '../data/personalinfo.json';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    dividerClass: {\n        margin: '2px',\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    card: {\n        minWidth: 275,\n        width: \"100%\",\n    },\n    cardMain: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(14),\n        fontWeight: \"bold\",\n    },\n    cardRightMain: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(14),\n    },\n});\n\nclass PersonalInfo extends React.Component {\n    render() {\n        const { classes } = this.props;\n\n        return(\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                <Grid item xs={11}>\n                    <Card className={classes.card} variant=\"outlined\">\n                        <CardContent>\n                            <Typography variant=\"h5\" component=\"h5\">\n                                Personal Info\n                            </Typography>\n                            \n                            {personalInfoData.map((personalInfo, idx) => {\n                                return (\n                                    <div>\n                                        <Grid container spacing={0}>\n                                            <Grid item xs={12} sm={3}>\n                                                <Typography className={classes.cardMain}>\n                                                    {personalInfo.title}\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12} sm={9}>\n                                                <Typography className={classes.cardRightMain}>\n                                                    {personalInfo.content.map((cnt, idx) => {\n                                                        return <div>{cnt}</div>\n                                                    })}\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                        {idx === [...personalInfoData].length - 1 ? \"\" : <Divider className={classes.dividerClass} />}\n                                    </div>\n                                );\n                            })}                           \n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nPersonalInfo.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PersonalInfo);\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport skillsData from '../data/skills.json';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    dividerClass: {\n        margin: '2px',\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    card: {\n        minWidth: 275,\n        width: \"100%\",\n    },\n    cardMain: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(14),\n        fontWeight: \"bold\",\n    },\n    cardRightMain: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(14),\n    },\n});\n\nclass Skills extends React.Component {\n    render() {\n        const { classes } = this.props;\n\n        return(\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                <Grid item xs={11}>\n                    <Card className={classes.card} variant=\"outlined\">\n                        <CardContent>\n                            <Typography variant=\"h5\" component=\"h5\">\n                                Skills\n                            </Typography>\n                            \n                            {skillsData.map((skill, idx) => {\n                                return (\n                                    <div>\n                                        <Grid container spacing={0}>\n                                            <Grid item xs={12} sm={3}>\n                                                <Typography className={classes.cardMain}>\n                                                    {skill.title}\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12} sm={9}>\n                                                <Typography className={classes.cardRightMain}>\n                                                    {skill.content.map((cnt, idx) => {\n                                                        return <div>{cnt}</div>\n                                                    })}\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                        {idx === [...skillsData].length - 1 ? \"\" : <Divider className={classes.dividerClass} />}\n                                    </div>\n                                );\n                            })}                           \n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nSkills.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Skills);\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\n\nimport Articles from './profile/articles';\nimport Education from './profile/education';\nimport Experience from './profile/experience';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MonochromePhotosIcon from '@material-ui/icons/MonochromePhotos';\nimport OpenSource from './profile/open_source';\nimport PersonalInfo from './profile/personalinfo';\nimport Skills from './profile/skills';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        padding: theme.spacing(2),\n    },\n    dividerClass: {\n        margin: '2px',\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    card: {\n        minWidth: 275,\n        width: \"100%\",\n    },\n    cardMain: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(16),\n    },\n    cardRightMain: {\n        textAlign: \"right\",\n        fontSize: theme.typography.pxToRem(16),\n        color: theme.palette.warning.dark,\n    },\n    cardSecondary: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(16),\n    },\n    cardRightSecondary: {\n        textAlign: \"right\",\n        fontSize: theme.typography.pxToRem(16),\n        color: theme.palette.warning.dark,\n    },\n    cardLastText: {\n        textAlign: \"left\",\n        fontSize: theme.typography.pxToRem(14),\n        color: theme.palette.text.secondary,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    fullnameHeading: {\n        textAlign: \"center\",\n        fontSize: theme.typography.pxToRem(34),\n    },\n    personalInfoData: {\n        textAlign: \"center\",\n        fontSize: theme.typography.pxToRem(18),\n        fontStyle: \"italic\",\n        fontWeight: \"bold\",\n        color: theme.palette.info.dark,\n    },\n    personalQuotesData: {\n        textAlign: \"center\",\n        fontSize: theme.typography.pxToRem(14),\n        fontStyle: \"italic\",\n    }\n});\n\nclass Profile extends React.Component {\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid className={classes.root} container justify=\"center\" alignItems=\"center\" spacing={0}>\n                <Grid item xs={12} sm={9}>\n                    <Paper className={classes.root} elevation={7}>\n                        <Grid container justify=\"center\" alignItems=\"flex-start\" spacing={2}>\n                            <Grid item xs={12} sm={4}>\n                                <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                    <Grid item xs={12}>\n                                        <br /><br />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n                                    <Grid item xs={12}>\n                                        <Typography className={classes.fullnameHeading}>\n                                            Angelos Giannis\n                                        </Typography>\n                                        <Divider className={classes.dividerClass} />\n\n                                        <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                            <Grid item xs={12}>\n                                                <br />\n                                            </Grid>\n                                        </Grid>\n\n                                        <Typography className={classes.personalInfoData}>\n                                            Software Engineer <br/> Lifelong Learner - Amateur Photographer\n                                        </Typography>\n\n                                        <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                            <Grid item xs={12}>\n                                                <br />\n                                            </Grid>\n                                        </Grid>\n\n                                        <Typography className={classes.personalQuotesData}>\n                                            \"The best way to write code is to make it self explanatory so that it is easy to read and fully understand what it actually does.\"\n                                            <br />\n                                            \"Let variables and functions speak for themselves.\"\n                                        </Typography>\n\n                                        <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                            <Grid item xs={12}>\n                                                <br />\n                                            </Grid>\n                                        </Grid>\n\n                                        <Divider className={classes.dividerClass} />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n                                    <Grid container justify=\"center\" alignItems=\"center\" xs={10} sm={10}>\n                                        <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                            <Grid item xs={12}>\n                                                <br />\n                                            </Grid>\n                                        </Grid>\n\n                                        <Tooltip title=\"GitHub\" placement=\"top\">\n                                            <Link href=\"https://github.com/eujoy\" target=\"_blank\" color=\"inherit\">\n                                                <GitHubIcon />\n                                            </Link>\n                                        </Tooltip>\n                                        &nbsp;\n                                        <Tooltip title=\"LinkedIn\" placement=\"top\">\n                                            <Link href=\"https://www.linkedin.com/in/v-angelos-giannis\" target=\"_blank\" color=\"inherit\">\n                                                <LinkedInIcon />\n                                            </Link>\n                                        </Tooltip>\n                                        &nbsp;\n                                        <Tooltip title=\"Instagram\" placement=\"top\">\n                                            <Link href=\"https://www.instagram.com/angelgiannis\" target=\"_blank\" color=\"inherit\">\n                                                <InstagramIcon />\n                                            </Link>\n                                        </Tooltip>\n                                        &nbsp;\n                                        <Tooltip title=\"Unsplash\" placement=\"top\">\n                                            <Link href=\"https://unsplash.com/@eujoy_ang\" target=\"_blank\" color=\"inherit\">\n                                                <PhotoCameraIcon />\n                                            </Link>\n                                        </Tooltip>\n                                        &nbsp;\n                                        <Tooltip title=\"500px\" placement=\"top\">\n                                            <Link href=\"https://500px.com/eujoy\" target=\"_blank\" color=\"inherit\">\n                                                <MonochromePhotosIcon />\n                                            </Link>\n                                        </Tooltip>\n                                        &nbsp;\n                                        <Tooltip title=\"Mail to : angelos.giannis@gmail.com\" placement=\"top\">\n                                            <Link href=\"mailto:angelos.giannis@gmail.com\" color=\"inherit\">\n                                                <MailIcon />\n                                            </Link>\n                                        </Tooltip>\n\n                                        <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                            <Grid item xs={12}>\n                                                <br />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n                                    <Grid item xs={12}>\n                                        <Divider className={classes.dividerClass} />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                    <Grid item xs={12}>\n                                        <br />\n                                    </Grid>\n                                </Grid>\n                                \n                                <Grid container justify=\"left\" alignItems=\"left\" spacing={0}>\n                                    <Grid item xs={12}>\n                                        <Education />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                    <Grid item xs={12}>\n                                        <br />\n                                    </Grid>\n                                </Grid>\n                                \n                                <Grid container justify=\"left\" alignItems=\"left\" spacing={0}>\n                                    <Grid item xs={12}>\n                                        <OpenSource />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container justify=\"left\" alignItems=\"left\" spacing={0}>\n                                    <Grid item xs={12}>\n                                        <Articles />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n\n                            <Grid item xs={12} sm={8}>\n                                <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                    <Grid item xs={12}>\n                                        <br />\n                                    </Grid>\n                                </Grid>\n                                \n                                <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                    <Grid item xs={12}>\n                                        <Experience />\n                                    </Grid>\n                                </Grid>\n                                \n                                <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                    <Grid item xs={12}>\n                                        <br />\n                                    </Grid>\n                                </Grid>\n                                \n                                <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                    <Grid item xs={12}>\n                                        <Skills />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                    <Grid item xs={12}>\n                                        <br />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                    <Grid item xs={12}>\n                                        <PersonalInfo />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                    <Grid item xs={12}>\n                                        <br />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nProfile.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Profile);","import React from \"react\";\nimport \"./App.css\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport Profile from \"./components/profile\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n      <Paper className={classes.paper} elevation={3}>\n        <div className=\"App\">\n          <Grid container className={classes.root} justify=\"center\" alignItems=\"center\" spacing={0}>\n            <Grid item xs={12} sm={12}>\n              <Profile />\n            </Grid>\n          </Grid>\n        </div>\n      </Paper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}